// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using hospital;

#nullable disable

namespace hospital.Migrations
{
    [DbContext(typeof(hospitalContext))]
    partial class hospitalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("hospital.Models.Appointment", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("id"));

                    b.Property<string>("adressOfBuilding")
                        .HasColumnType("text")
                        .HasColumnName("adress_of_building");

                    b.Property<string>("date")
                        .HasColumnType("text")
                        .HasColumnName("date");

                    b.Property<string>("doctorSsn")
                        .HasColumnType("text")
                        .HasColumnName("doctor_ssn");

                    b.Property<string>("patientSsn")
                        .HasColumnType("text")
                        .HasColumnName("patient_ssn");

                    b.Property<int?>("roomNumber")
                        .HasColumnType("integer")
                        .HasColumnName("room_number");

                    b.HasKey("id");

                    b.ToTable("appointment", (string)null);
                });

            modelBuilder.Entity("hospital.Models.Building", b =>
                {
                    b.Property<string>("adress")
                        .HasColumnType("text")
                        .HasColumnName("adress");

                    b.Property<int?>("departmentId")
                        .HasColumnType("integer")
                        .HasColumnName("department_id");

                    b.Property<int?>("numberOfRooms")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_rooms");

                    b.HasKey("adress");

                    b.ToTable("building", (string)null);
                });

            modelBuilder.Entity("hospital.Models.Department", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("id"));

                    b.Property<string>("headOfDepartment")
                        .HasColumnType("text")
                        .HasColumnName("head_of_department");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("id");

                    b.ToTable("department", (string)null);
                });

            modelBuilder.Entity("hospital.Models.Doctor", b =>
                {
                    b.Property<string>("ssn")
                        .HasColumnType("text")
                        .HasColumnName("ssn");

                    b.Property<int?>("departmentId")
                        .HasColumnType("integer")
                        .HasColumnName("department_id");

                    b.Property<string>("email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("firstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("lastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("phoneNumer")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.HasKey("ssn");

                    b.ToTable("doctor", (string)null);
                });

            modelBuilder.Entity("hospital.Models.Patient", b =>
                {
                    b.Property<string>("ssn")
                        .HasColumnType("text")
                        .HasColumnName("ssn");

                    b.Property<string>("email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("firstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("lastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.HasKey("ssn");

                    b.ToTable("patient", (string)null);
                });

            modelBuilder.Entity("hospital.Models.Secretary", b =>
                {
                    b.Property<string>("ssn")
                        .HasColumnType("text")
                        .HasColumnName("ssn");

                    b.Property<string>("email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.HasKey("ssn");

                    b.ToTable("secretary", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
